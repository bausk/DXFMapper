#Model file to generate the actual spheric dome mesh.
#Input: lines modeling tendons, 3dfaces modeling concrete bases
#Output: LIRA output
#Next step: figure out sewing with cylinder
#Problems solved: spheric move

[DefaultFilter]
Type = DefaultFilter
InputFileList = "../Tests/Test6.dxf"
Precision = 3
Normalize = Yes
Entities = NONE

	[[Origin]]
	X = 0
	Y = 0
	Z = 0

	[[Target]]
	X = Preset, Orthospheric, X #Mapping formula (preset or custom), Transformation type, Corresponding axis
	Y = Preset, Orthospheric, Y
	Z = Preset, Orthospheric, Z

	[[Transformation mapping]]
		[[[X]]]
		Mapping = X
		Origin = 0

		[[[Y]]]
		Mapping = Y
		Origin = 0

		[[[Z]]]
		Mapping = Z
		Origin = 0

		[[[D]]]
		Scale = 1

		[[[G]]]
		Scale = 1

		[[[R]]]
		Scale = 1
		#Origin = 0
		Origin = 0.54


#Filters for entities to be included in the model

[LowerTendons]
Type = Filter
Layer = "Test6 LowerTendons"
Output = "DXF Output"
Entities = LINE
PreprocessType = Preset
	[[Preprocess]]
	Function = "SphericMove"
	Parameter = '{"Method":"ByLayer", "Test6 LowerTendons":[0, 0, 0.4]}'
	Data = '{"StiffnessMarker":"Tendon1"}'

[UpperTendons]
Type = Filter
Layer = "Test6 UpperTendons"
Output = "DXF Output"
Entities = LINE
PreprocessType = Preset
	[[Preprocess]]
	Function = "SphericMove"
	Parameter = '{"Method":"ByLayer", "Test6 UpperTendons":[0, 0, 0.7]}'
	Data = '{"StiffnessMarker":"Tendon1"}'

[TestBases]
Type = Filter
Layer = "Test6 TestBases"
Output = "DXF Output"
Entities = 3DFACE
PreprocessType = Preset
	[[Preprocess]]
	Function = "ExtrudeR"
	Parameter = 0.4, 0.3, 0.4
	Data = '{"StiffnessMarker":"Conc1Vol"}', '{"StiffnessMarker":"Conc2Vol"}', '{"StiffnessMarker":"Conc3Vol"}'

#Output model and semantics
[Default Output]
Type = DefaultOutput
OutputFile = "../Tests - Results/Test6.dxf"
OutputType = Preset
Name = DXF

[DXF Output]
Type = Output
OutputFile = "../Tests - Results/Test6.dxf"
OutputType = Preset
Name = DXF
	[[Actions]]
		[[[Orphans]]]
		Type = Orphans
		Action = 1

	[[Element Actions]]
		[[[Assign Layer]]]
		Action = AssignLayer
		Layers = '{"LowerTendons":"LowerTendons", "UpperTendons":"UpperTendons", "TestBases":"TestBases"}'

[Lira Output]
Type = Output
OutputFile = "../Tests - Results/Test6.txt"
OutputType = Preset
Name = Lira-Custom
Format = Lira
Semantic = "Advanced Test"
PointActionOrder = "Compatible Nodes", "Rotate Nodes"
ElementActionOrder =  "Pretensioning"
	[[Actions]]
		[[[Properties]]]
		Type = ElementProperties
		Tendon1 = "S6 19.500E+006 15 0"
		Conc1Plate = "GEI 3.25E+006 0.3 0.4 RO 2.65"
		Conc2Plate = "GEI 3.25E+006 0.3 0.25 RO 2.65"
		Conc3Plate = "GEI 3.25E+006 0.3 0.25 RO 2.65"
		Conc4Plate = "GEI 3.25E+006 0.3 0.25 RO 2.65"
		Conc1Vol = "OBI 3.25E+006 0.3 RO 2.65"
		Conc2Vol = "OBI 3.25E+006 0.3 RO 2.65"
		Conc3Vol = "OBI 3.25E+006 0.3 RO 2.65"
		Conc4Vol = "OBI 3.25E+006 0.3 RO 2.65"

		#[[[Orphans]]]
		#Type = Orphans
		#Action = 1

	[[Point Actions]]
		[[[Compatible Nodes]]]
		Type = Compatibility
		Filters = TestBases, LowerTendons
		CutoffZ = 0.2, 157.9

		[[[Rotate Nodes]]]
		Type = NodalAxisRotation
		Filters = Tendons
		Action = VectorSum
		Direction = "Z+"

		#[[[Supports]]]
		#Type = Supports
		#CutoffZ = -0.2, 0.2
		#Filters = Volumes
		#Value = UX, UY, UZ, RX, RY, RZ


	[[Element Actions]]
		[[[Pretensioning]]]
		Action = ElementForce
		Type = Dilatation
		Filters = LowerTendons
		Markers = "color:1"
		Value = -2.4

		#[[[InternalPressure]]]
		#Action = ElementForce
		#Type = VolumePressure
		#Filters = Volumes
		#Markers = "generation_order:0"
		#Value = '{"loadtype":6,"axis":3,"face":5,"value":40}'